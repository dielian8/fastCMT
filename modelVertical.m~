function modelVertical(f,fgreen,m,lonmeca,latmeca,zmeca)

%DMM 06/2011
%
%Use the results of the ivnersion and predict verticla displacements
%
% Input variables:
%
% coseis - Structure variable containing the following fields
%     .N ~ North dispalcement;
%     .E ~ East dispalcement;
%     .U ~ Vertical dispalcement;
%     .T ~ Time, zero is assumed to be the event origin time;
%     .lon ~ Station longitudes;
%     .lat ~ Station latitudes;
%     .stdn ~ Uncertainties in north observations (pre-event std. deviaiton);
%     .stde ~ Uncertainties in east observations;
%     .stdu ~ Uncertainties in vertical observations;
% f - Green function file
% velmod - Four column strucure model, column 1 is depth of layer, column 2
%          is p-wave velocity, column 3 is s wave velocity, column 4 is density
% epi - epicenter [lon lat depth(m)]
% psmecaf - psmeca filename
% weightflag - Weight by preevent standard deviations on all 3 channels.
% plotflag - Plot observed andsynthetic offsets each time sample.
%
% Output variables:
%fd
% m - 3x3xNt array containing the moment tensor at each time step.
% L - 1xNt array containing misfits at each time step.
% synthetics - Observed and synthetic displacements
% chi - CHi square value of the inversion at each epoch
%_______________________________________________________________________
%_______________________________________________________________________


%Preliminaries
cd(f)
load('velmod')
N=max(size(latmeca));
vert=[];
%Grid for verticals
dlat=0.1;
dlon=0.1;
longrid=137:dlon:147;
latgrid=35:dlat:45.8;
[Lat,Lon]=meshgrid(latgrid,longrid);
Lat=reshape(Lat,size(Lat,1)*size(Lat,2),1);
Lon=reshape(Lon,size(Lon,1)*size(Lon,2),1);
nsta=max(size(Lat));
%Indices for preparing d vector
j=1:1:nsta*3;
j=reshape(j,3,nsta);
j=j(1,:);

for l=1:N
    display([num2st
    %Define coordinate origin
    late = latmeca(l);
    lone = lonmeca(l);
    depth= zmeca(l);
    mu=getmu(velmod,depth)
    %Get grid info
    [dist,az] = distance(late,lone,Lat,Lon);
    dist=deg2km(dist)*1000;
    az=-az+90;
    az=deg2rad(az);
    [e n]=pol2cart(az,dist);
    x=n;
    y=e;
    dsta=dist;
    az=atan2(y,x);
    %MAKE KERNEL MATRIX __________________
    [GZ1 GR1 GT1 GZ2 GR2 GT2 GZ3 GR3 GZ4 GR4 GT4 GZ5 GR5 GT5] =makegreen(fgreen,x,y,depth);
    %Prepare inversion matrices
    display('Preparing matrices for inversion...')
    k=1;
    for i=1:size(GR1,1)
        %Vertical component of Gram matrix
        G(k,1)=GZ1(i);
        G(k,2)=GZ2(i);
        G(k,3)=GZ3(i);
        G(k,4)=GZ4(i);
        G(k,5)=GZ5(i);
        %Radial component of Gram matrix
        G(k+1,1)=GR1(i);
        G(k+1,2)=GR2(i);
        G(k+1,3)=GR3(i);
        G(k+1,4)=GR4(i);
        G(k+1,5)=GR5(i);
        %Tangential component of Gram matrix
        G(k+2,1)=GT1(i);
        G(k+2,2)=GT2(i);
        G(k+2,3)=0;
        G(k+2,4)=GT4(i);
        G(k+2,5)=GT5(i);
        k=k+3;
    end
    
    %Get momeont tensor
    M=m(:,:,l);
    M=mt2mtinv(M);
    M=M/mu;
    %Get synthetics
    ds=G*M;
    %Get verticals (No need to rotate)
    dz=ds(j);
    vert=[vert Lon Lat dz];
end
save('modeledvert.xyz','vert','-ascii')